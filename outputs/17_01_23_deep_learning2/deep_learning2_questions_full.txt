(0)TAKEN?True RQUGE:5.0814
Q1:In what year was the deep net architecture revived?
Q2:When was interest in deep feedforward networks revived?
Best ans: 2006
['A0: Around 2006', 'A1: 2006', 'A2: Around 2006 (refs 31–34)', 'A3: 2006 was the year deep feedforward networks were revived.', 'A4: ', 'A5: 2006.', 'A6: 2006', 'A7: ']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



(1)TAKEN?True RQUGE:5.0164
Q1:What is the name of the method that most practitioners use to adjust the weights?
Q2:What procedure do most practitioners use?
Best ans: Stochastic Gradient Descent (SGD))
['A0: Stochastic Gradient Descent (SGD) (sgd) is a procedure that most practitioners use to adjust the weights. to properly adjust theweight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A1: In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) (sgd) this consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. the negative gradient vector indicates the direction of steepest descent in this landscape', 'A2: In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) (sgd) this consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly.', 'A3: Stochastic Gradient Descent (SGD) (sgd) is a procedure that most practitioners use to adjust the weights.', 'A4: Stochastic Gradient Descent (SGD))', 'A5: Deep convolutional nets', 'A6: Sgd', 'A7: Statistical gradient descent']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(2)TAKEN?False RQUGE:5.0135
Q1:How does deep learning differ from conventional machine learning techniques?
Q2:What is the key aspect of deep learning?
Best ans: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.
['A0: This is a list of machine-learning applications. deep learning is based on the idea that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A1: Machine-learning systems can process natural data. conventional machine-learning techniques were limited in their ability to process natural. data in their raw form for decades. deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years.', 'A2: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A3: The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A4: They are learned from data using a general-purpose learning procedure.', 'A5: Requires very little engineering by hand', 'A6: Required careful engineering and considerable domain expertise to design a feature extractor', 'A7: They are learned from data using a general-purpose learning procedure']
Text:Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



(3)TAKEN?False RQUGE:5.0135
Q1:What is the key aspect of deep learning?
Q2:What is the key aspect of deep learning?
Best ans: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.
['A0: The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A1: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A2: It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. the key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A3: Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. the key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A4: No engineering by hand', 'A5: Requires very little engineering by hand', 'A6: They are learned from data using a general-purpose learning procedure', 'A7: These layers of features are not designed by human engineers']
Text:Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



(4)TAKEN?True RQUGE:4.9825
Q1:In which layer do we compute the error derivative?
Q2:Where do we compute the error derivative with respect to the output of each unit?
Best ans: Each hidden layer
['A0: Layer below.', 'A1: Layer below', 'A2: F(z) = max(0,z)', 'A3: Each hidden layer', 'A4: Hidden layers', 'A5: Above', 'A6: Hidden', 'A7: Below']
Text:It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output. Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two. Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



(5)TAKEN?True RQUGE:4.8294
Q1:Increasingly, these applications make use what?
Q2:What do machine-learning systems increasingly use?
Best ans: Class of techniques called deep learning.
['A0: Deep neural networks', 'A1: Class of techniques called deep learning.', 'A2: Increasingly, these applications make use of a class of techniques called deep learning.', 'A3: A class of techniques called deep learning.', 'A4: Depth', 'A5: Deep learning.', 'A6: Deep learning', 'A7: ']
Text:Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



(6)TAKEN?False RQUGE:4.7925
Q1:When was interest in deep feedforward networks renewed?
Q2:When was interest in deep feedforward networks revived?
Best ans: Around 2006 (refs 31–34)
['A0: 2006', 'A1: Around 2006', 'A2: 2006 was the year that deep feedforward networks were revived.', 'A3: Around 2006 (refs 31–34)', 'A4: Near', 'A5: About 2006', 'A6: 2006.', 'A7: 2006']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



(7)TAKEN?False RQUGE:4.5163
Q1:At each hidden layer, we compute what?
Q2:What do we compute at each hidden layer?
Best ans: Error derivative with respect to the output of each unit
['A0: Error derivative', 'A1: Error derivative with respect to the output of each unit', 'A2: The error derivative with respect to the output of each unit.', 'A3: The error derivative with respect to the output of each unit', 'A4: The total input', 'A5: Total input z', 'A6: The error derivative', 'A7: Error derivative']
Text:It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output. Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two. Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



(8)TAKEN?True RQUGE:4.5116
Q1:Which of these methods has dramatically improved the state-of-the-art in speech recognition?
Q2:What does deep learning allow?
Best ans: Recurrent nets have shone light on sequential data such as text and speech using deep learning. deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction.
['A0: Recurrent nets have shone light on sequential data such as text and speech using deep learning.', 'A1: Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets has shone light on sequential data such as text and speech.', 'A2: The state-of-the-art in speech recognition is greatly improved by deep learning. deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction.', 'A3: Recurrent nets have shone light on sequential data such as text and speech using deep learning. deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction.', 'A4: Convolutional', 'A5: Deeper', 'A6: Deeper nets', 'A7: Deep learning']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(9)TAKEN?True RQUGE:4.4769
Q1:Which of these is not a serious issue in general in general?
Q2:Which of these is not a serious issue in general in general?
Best ans: Local minima are not a serious issue in general in general.
['A0: Local minimums', 'A1: Local minimums in deep networks', 'A2: Local minima are not a serious issue in general in general.', 'A3: Nearly all of these saddle points have very similar values of the objective function. hence, it does not much matter which of the saddle points the algorithm gets stuck at.', 'A4: Local minimums', 'A5: Local minimum', 'A6: Locally minimal', 'A7: Hidden layers']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



(10)TAKEN?True RQUGE:4.4664
Q1:When a weight is increased by a tiny amount, what would the error increase or decrease?
Q2:What does the gradient vector do?
Best ans: To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.
['A0: To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. to properly adapt the weights, the algorithm computed a negative gradient vector', 'A1: In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. to properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A2: A typical deep-learning system may have hundreds of millions of these adjustable weights. to properly adjust the weight vector, the learning algorithm computes the gradient vector that, for each weight, indicates by what amount the error would increase or decrease.', 'A3: To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A4: Increases', 'A5: Increase', 'A6: Decrease', 'A7: ']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(11)TAKEN?False RQUGE:4.448
Q1:To properly adjust the weight vector, what is done to the weights in the learning algorithm
Q2:What does the learning algorithm do to properly adjust the weight vector?
Best ans: Computation of gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount
['A0: For each weight, the learning algorithm computes a gradient vector that indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A1: Computation of gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A2: Computation of gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount', 'A3: The deep learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount', 'A4: Calculates', 'A5: Computed', 'A6: Computation', 'A7: A gradient vector']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(12)TAKEN?True RQUGE:4.0432
Q1:In what domains can deep learning be used?
Q2:What has deep learning dramatically improved?
Best ans: In speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics.
['A0: In speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics.', 'A1: Speech recognition visual object recognition object detection and many other domains such as drug discovery and genomics', 'A2: Drug discovery and genomics are two domains that have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains.', 'A3: These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics.', 'A4: Vision', 'A5: Voice recognition', 'A6: Visual object recognition', 'A7: Image and speech recognition']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(13)TAKEN?True RQUGE:3.9979
Q1:What is the main idea of this passage?
Q2:What do many applications of deep learning use?
Best ans: Deep learning uses feedforward neural networks to map a fixed-size input (for example, an image) to a fix size output.
['A0: Neural networks are trained by a process called Stochastic Gradient Descent (SGD).', 'A1: Deep learning uses feedforward neural networks to map a fixed-size input (for example, an image) to a fix size output.', 'A2: Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general.', 'A3: Many applications of deep learning use feedforward neural network architecture (fig. 1), which learn to map a fixed-size input (for example, an image) to a fix size output.', 'A4: Local minimums', 'A5: Deep neural networks and backpropagation', 'A6: Deep neural networks', 'A7: Deep learning uses feedforward neural networks']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



(14)TAKEN?True RQUGE:3.7901
Q1:Which of these is not a type of machine learning?
Q2:Which of these is not a type of machine learning?
Best ans: Human engineering
['A0: Human engineering.', 'A1: Human engineering', 'A2: Deep neural networks', 'A3: Identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search', 'A4: Human engineering', 'A5: Humans', 'A6: Deep neural networks', 'A7: Domain expertise']
Text:Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



(15)TAKEN?False RQUGE:3.7291
Q1:How are reluc functions used in neural networks?
Q2:What is computed at each hidden layer?
Best ans: F(z) = max(0,z) is applied to z to get the output. at each hidden layer we compute the error derivative with respect to the output of each unit.
['A0: Reluc functions are used in neural networks to approximate the weights of the inputs of each unit.', 'A1: Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) (relu) f(z) = max(0,z) commonly used in recent years.', 'A2: F(z) = max(0,z) is applied to z to get the output.', 'A3: F(z) = max(0,z) is applied to z to get the output. at each hidden layer we compute the error derivative with respect to the output of each unit.', 'A4: Used in recent years.', 'A5: Used in recent years', 'A6: Commonly used in recent years.', 'A7: Commonly used in recent years']
Text:It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output. Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two. Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



(16)TAKEN?True RQUGE:3.6925
Q1:Machine-learning systems are used to identify objects in images, what?
Q2:What are some of the applications of machine learning?
Best ans: Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. increasingly, these applications make use of a class of techniques called deep learning.
['A0: Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. increasingly, these applications make use of a class of techniques called deep learning.', 'A1: Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search', 'A2: Transcribing speech into text requires careful engineering and considerable domain expertise to design a feature extractor. deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years.', 'A3: The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A4: Search', 'A5: Text', 'A6: Transscribe speech into text', 'A7: Translate speech into text']
Text:Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



(17)TAKEN?False RQUGE:3.605
Q1:How are hidden layers different from hidden layers in deep learning?
Q2:What caused the interest in deep feedforward networks to be revived in 2006?
Best ans: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (fig. 1), such as hidden layers. interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research (CIFAR).
['A0: Multilayer networks are trained by simple Stochastic Gradient Descent (SGD). hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (fig. 1), such as hidden layers.', 'A1: Many applications of deep learning use feedforward neural network architecture (fig. 1), which learn to map a fixed-size input (for example, an image) to a fix size output.', 'A2: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (fig. 1), such as hidden layers. interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research (CIFAR).', 'A3: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (fig. 1), such as hidden layers.', 'A4: Classification becomes linearly separable', 'A5: Classification', 'A6: Local minima are not a serious issue in general', 'A7: Local minima are not a serious issue']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



(18)TAKEN?False RQUGE:2.9094
Q1:Why do we need to use a non-linear function?
Q2:What is used to get the derivatives?
Best ans: A non-linear function is used to get the output of the units in the layer below to get a weighted sum of the output. the weightes are jacobian matrix.
['A0: In order to get a weighted sum, we need to compute the error derivative. the weightes are jacobian matrices.', 'A1: A non-linear function is used to get the output of the units in the layer below to get a weighted sum of the output. the weightes are jacobian matrix.', 'A2: A non-linear function is used to get the output of the units in the layer below to get a weighted sum of the output.', 'A3: Raw pixels could not possibly distinguish the latter two.', 'A4: With multiple non-linear layers', 'A5: Sensitive to minute details', 'A6: To get the output of each unit', 'A7: Simultaneously sensitive to minute details']
Text:It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output. Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two. Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



(19)TAKEN?True RQUGE:2.8782
Q1:How do you adjust the weights in a typical deep learning system?
Q2:What does the SGD process do?
Best ans: Stochastic Gradient Descent (SGD) (sgd) is the process whereby practitioners show the input vector for a few examples and compute the outputs and errors, and computing the average gradient for those examples, and adjusting the weights accordingly. to properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.
['A0: Using a procedure called Stochastic Gradient Descent (SGD) (sgd), most practitioners show the input vector for a few examples, computing the outputs and errors, and computing the average gradient for those examples, and adjusting the weights accordingly.', 'A1: Stochastic Gradient Descent (SGD) (sgd) is the process whereby practitioners show the input vector for a few examples and compute the outputs and errors, and computing the average gradient for those examples, and adjusting the weights accordingly.', 'A2: Stochastic Gradient Descent (SGD) (sgd) is the process whereby practitioners show the input vector for a few examples and compute the outputs and errors, and computing the average gradient for those examples, and adjusting the weights accordingly. to properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A3: To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. to properly adapt the weights, the method is called Stochastic Gradient Descent (SGD) (sgd).', 'A4: Computes a gradient', 'A5: Computes a gradient vector', 'A6: Computations a gradient vector', 'A7: Stochastic Gradient Descent (SGD) (sgd)']
Text:Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called Stochastic Gradient Descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average. Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other. The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule.



(20)TAKEN?True RQUGE:2.7983
Q1:A neural network can be used to learn to recognize what kind of objects
Q2:How does a deep learning network learn to recognize objects?
Best ans: In this example, we are going to use a simple deep learning architecture to learn to recognize objects. the basic idea is that the network learns to recognize the objects by performing a series of tasks on the input data. each task is performed on the output of the previous task and the output is compared to the input.
['A0: This is done by learning to recognize objects based on their shape and color. the basic idea is that the network learns to recognize what kind of objects are in the image. then it applies a non-linear function to the weighted sum to get a weighte d of each unit.', 'A1: In this example, we are going to use a simple deep learning architecture to learn to recognize objects. the basic idea is that the network learns to recognize the objects by performing a series of tasks on the input data.', 'A2: This is done by learning to recognize objects based on their shape and color. the basic idea is that the network learns to recognize what kind of objects are in the image.', 'A3: In this example, we are going to use a simple deep learning architecture to learn to recognize objects. the basic idea is that the network learns to recognize the objects by performing a series of tasks on the input data. each task is performed on the output of the previous task and the output is compared to the input.', 'A4: Images from white', 'A5: Images', 'A6: Image', 'A7: Wolves']
Text:It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output. Non-linear functions used in neural networks include the Rectified Linear Unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two. Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



(21)TAKEN?True RQUGE:1.1136
Q1:The idea of deep learning was discovered by several different groups during which decade?
Q2:During what decade was the idea of backpropagation discovered?
Best ans: 1980s
['A0: 1980s.', "A1: 1990's", 'A2: 1979', 'A3: 1980s', 'A4: 1980', 'A5: 80', 'A6: 1970', 'A7: 1990s']
Text:Multilayer networks can be trained by simple Stochastic Gradient Descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to map a fixed-size input (for example, an image) to a fixed size output. In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers. Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output. In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.



