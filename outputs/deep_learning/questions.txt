RQUGE:5.0857
 Q1:The author uses LSTM networks to train what?
Q2:What system uses LSTM networks?
Best ans: speech recognition
['A0: speech recognition',
'A1: RNNs',
 'A2: speech recognition system',
  'A3: Machine translation', 'A4: RNNs', 'A5: machine translation17', 
'A6: speech recognition', 'A7: speech recognition system']
Text: For tasks that involve sequential inputs, such as speech and language,
it is often better to use recurrent neural networks (RNNs)
 Backpropagation was first introduced to train RNNs But training them has 
 proved to be problematic because the backpropagated gradients either grow or shrink at each time step,
so over many time steps they typically explode or vanish77,78.
 When we consider the output of the hidden units at different discrete time steps as
  if they were the outputs of different neurons in a deep multilayer network,
   it becomes clear how we can apply backPropagation to train Rnns. 
This rather naive way of performing machine translation has quickly become competitive with
 the state-of-the-art. This raises serious doubts about whether understanding a sentence requires
  anything like the internal symbolic expressions that are manipulated by using inference rules.
   It is more compatible with the view that everyday reasoning involves many simultaneous analogies 
   of word representations learned for modelling language, non-linearly projected to 2D 
   for visualization using the t-SNE algorithm103.
    Instead of translating meaning of a French sentence into an English sentence,
     one can learn to ‘translate’ the meaning of an image.
       The encoder is a deep ConvNet that converts pixels into an activity vector in its last
        hidden layer. The decoder is an recurrent neural network (RNN) similar
         to the ones used for machine translation and neural language modelling.
          long short-term memory (LSTM) networks have subsequently proved to be more effective
           than conventional RNNs, especially when they have several layers for each time step87,
            enabling an entire speech recognition system that goes all the way from acoustics
             to the sequence of characters in the transcription. 
              LSTM networks or related forms of gated units are also currently
               used for the encoder and decoder networks that perform so well at machine
                translation17,72,76.
                 Proposals include the Neural Turing Machine in which the network is augmented by 
                 a ‘tape-like’ memory that the RNN can choose to read from or write to88, 
                 and memory networks. Memory networks have yielded excellent performance on standard 
                 question-answering benchmarks.



RQUGE:5.0147
 Q1:How does deep learning differ from conventional machine learning techniques?
Q2:What is the key aspect of deep learning?
Best ans: These layers of features are not designed by human engineers:
 they are learned from data using a general-purpose learning procedure.
['A0: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. The key aspect of deep learning, therefore, is that these layers of layers of feature are not created by human designers: they were learned from the data using data using general- purpose learning procedure', 'A1: The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. The key aspects are that these features are learned by human engines: they were learned from a data using general- purpose learning procedure', 'A2: These layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A3: The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A4: this layer is not designed by human engineers: they are learned from data using a general-purpose learning procedure.', 'A5: this layer is not designed by human engineers: they are learned from data using a general-purpose learning procedure', 'A6: they are learned from data using a general-purpose learning procedure.', 'A7: they are learned from data using a general-purpose learning procedure']Text: Machine-learning systems are used to identify objects in images, transcribe speech into text, match news items, posts or products with users’ interests, and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning. Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor.  Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years. It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science, business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



RQUGE:4.9819
 Q1:In what technology are ConvNets being used?
Q2:What applications will images labelled at the pixel level have?
Best ans: autonomous mobile robots and self-driving cars
['A0: autonomous mobile robots and self-driving cars.',
 'A1: autonomous mobile robots and self-driving cars',
  'A2: Autonomous mobile robots and self-driving cars are applications of ConvNets.
   Therefore, the final answer is autonomous mobile robot.', 'A3: autonomous mobile robots and self-driving cars. Companies such as Mobileye and NVIDIA are using ConvNet-based methods in their upcoming vision- tems for cars',
    'A4: vision',
     'A5: robots',
      'A6: self-driving cars',
       'A7: cars']
       Text: ConvNets have been applied with great success to the detection, segmentation and
        recognition of objects and regions in images since the early 2000s.
         A major recent practical success of face recognition is face recognition.
          Importantly, images can be labelled at the pixel level, which will have applications in 
          technology, including autonomous mobile robots and self-driving cars. Companies such as Mobileye and NVIDIA are using ConvNet-based methods in their upcoming vision-
           tems for cars. Other applications gaining importance involve natural language understanding14 and speech recognition.
    Recent ConvNet architectures have 10 to 20 layers of ReLUs, hundreds of millions of weights, and billions of connections between units. 
    ConvNets are easily amenable to efficient hardware implementations in chips or field-programmable gate arrays66,67.
     A number of companies such as NVIDIA, Mobileye, Intel, Qualcomm and Samsung are developing ConvNet chips to enable real-time vision applications in smartphones,
      cameras, robots and self-driving cars.



RQUGE:4.8669
 Q1:How many layers of ReLUs are in a ConvNet architecture?
Q2:How many layers of ReLUs are in a ConvNet architecture?
Best ans: 10 to 20 layers of ReLUs are in a ConvNet architectures.
['A0: The number of rectified linear unit (ReLU) layers in a ConvNet architecture is 10 to 20 layers.', 'A1: 10 to 20 layers of ReLUs are in a ConvNet architectures.', 'A2: Recently, ConvNet architectures have 10 to 20 layers of ReLUs.', 'A3: ConvNet architectures have 10 to 20 layers of ReLUs.', 'A4: 10-to-20', 'A5: Ten', 'A6: Ten or more', 'A7: 10 to 20']Text: ConvNets have been applied with great success to the detection, segmentation and recognition of objects and regions in images since the early 2000s. A major recent practical success of face recognition is face recognition. Importantly, images can be labelled at the pixel level, which will have applications in technology, including autonomous mobile robots and self-driving cars. Companies such as Mobileye and NVIDIA are using ConvNet-based methods in their upcoming vision-   tems for cars. Other applications gaining importance involve natural language understanding14 and speech recognition7.  Recent ConvNet architectures have 10 to 20 layers of ReLUs, hundreds of millions of weights, and billions of connections between units. ConvNets are easily amenable to efficient hardware implementations in chips or field-programmable gate arrays66,67. A number of companies such as NVIDIA, Mobileye, Intel, Qualcomm and Samsung are developing ConvNet chips to enable real-time vision applications in smartphones, cameras, robots and self-driving cars.



RQUGE:4.854
 Q1:Increasingly, these applications make use what?
Q2:What do machine-learning systems increasingly use?
Best ans: A class of techniques called deep learning.
['A0: deep neural networks.', 'A1: deep neural networks', 'A2: Increasingly, these applications make use of a class of technologies called deep learning.',
 'A3: A class of techniques called deep learning.', 'A4: the following classes', 'A5: Deep Learning', 'A6: deep learning.',
  'A7: class of techniques called deep learning']
  Text: Machine-learning systems are used to identify objects in images,
   transcribe speech into text, match news items, posts or products with users’ interests,
    and select relevant results of search. Increasingly, these applications make use of a class of techniques called deep learning.
     Conventional machine-learning techniques were limited in their ability to process natural data in their raw form. 
     For decades, constructing a pattern-recognition. system required careful engineering and considerable domain expertise to design a feature extractor. 
      Deep learning is making major advances in solving problems that have resisted the best attempts of the artificial intelligence community for many years.
       It has turned out to be very good at discovering intricate structures in high-dimensional data and is therefore applicable to many domains of science,
        business and government. The key aspect of deep learning is that these layers of features are not designed by human engineers: 
        they are learned from data using a general-purpose learning procedure. Deep learning will have many more successes in the near future because it requires very little engineering by hand, so it can easily take advantage of increases in the amount of available computation and data.  New learning algorithms and architectures that are currently being developed for deep neural networks will only accelerate this progress.



RQUGE:4.3775
 Q1:To properly adjust the weight vector, the learning algorithm computes what?
Q2:What does the learning algorithm compute?
Best ans: Gradient Vector That identifies by what amount the error would increase or decrease if the weight were increased by a tiny amount.
['A0: Gradient Vector', 'A1: a gradient vector', 'A2: Gradient Vector That identifies by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A3: For each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.', 'A4: for each weight', 'A5: an error derivative', 'A6: the learning algorithm computes a gradient vector', 'A7: a gradient vector']Text: Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.  Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called stochastic gradient descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average.  Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other.  The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule. It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output.  Non-linear functions used in neural networks include the rectified linear unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two.  Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module (module) in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



RQUGE:3.9873
 Q1:When a neural network learn word embedding, what is it doing?
Q2:What is a language model?
Best ans: Learning word embeddings is a way of performing the following: In a language model,
 the other layers of the network learn to convert the input word vectors into an output word vector for the predicted next word.
['A0: Learning word embeddings is a way of performing the following:', 'A1: Using a language model, the hidden layers in a neural net learn to represent the network’s inputs in s a way that makes it easy to predict the target outputs.', 'A2: Learning word embeddings is a way of performing the following: In a language model, the other layers of the network learn to convert the input word vectors into an output word vector for the predicted next word.', 'A3: The hidden layers of a multilayer neural network learn to represent the network’s inputs in a way that makes it easy to predict the target outputs. In a language model, the other layers of the network learn the following word vectors:', 'A4: converts', 'A5: convert', 'A6: representing', 'A7: language model, the other layers of the network learn to convert']Text: Deep-learning theory shows that deep nets have two different exponential advantages over classic learning algorithms that do not use distributed representations21. Both of these advantages arise from the power of composition and depend on the underlying data-generating distribution having an appropriate componential structure40. The hidden layers of a multilayer neural network learn to represent the network’s inputs in a way that makes it easy to predict the target outputs. Figure 3 | From image to text. Captions generated by a recurrent neural network taking, as extra input, the representation extracted by a deep convolution neural network from a test image.  Each word in the context is presented to the network as a one-of-N vector, that is, one component has a value of 1 and the rest are 0. The network learns word vectors that contain many active components each of which can be interpreted as a separate feature of the word. In a language model, the other layers of the network learn to convert the input word vectors into an output word vector for the predicted next word. These word vectors are composed of learned features that were not determined ahead of time by experts, but automatically discovered by the neural network.  In the logic-inspired paradigm, an instance of a symbol is something for which the only property is that it is either identical or non-identical to other symbols. By contrast, neural networks just use big activity vectors, big weight matrices and scalar non-linearities to perform the type of fast ‘intuitive’ inference that underpins effortless commonsense reasoning. Before the introduction of neural language models71, the standard approach to statistical modelling of language did not exploit distributed representations.



RQUGE:3.7251
 Q1:Where is a rectified linear unit (ReLU) used in ConvNets?
Q2:What is a rectified linear unit?
Best ans: A rectified linear unit (ReLU) can be used to pass the result of a weighted sum through a non-linearity such as a filter bank to a ConvNet layer.
['A0: A rectified linear unit (ReLU) can be used to pass the result of a weighted sum through a non-linearity such as a filter bank to a ConvNet layer. The result is then passed through s a rectified linear unit (reLU) to the Convnet layer.', 'A1: A rectified linear unit (ReLU) can be used to pass the result of a weighted sum through a non-linearity such as a filter bank to a ConvNet layer.', 'A2: Each unit is connected to local patches in the feature maps of the previous layer through a set of weights called a filter bank. The result of this local weighted sum is then passed through s a non-linearity such as a rectified linear unit (ReLU) in ConvNet.', 'A3: The result of this local weighted sum is then passed through a non-linearity such as a rectified linear unit (ReLU) in ConvNets. The first few stages are composed of two types of layers: convolutional layers and pooling layers.', 'A4: in feature maps of the previous layer', 'A5: in feature maps', 'A6: unit is organized in feature maps', 'A7: feature maps of the previous layer']Text: ConvNets are designed to process data that come in the form of multiple arrays. The architecture of a typical ConvNet is structured as a series of stages. The first few stages are composed of two types of layers: convolutional layers and pooling layers. Units in a ConvNet are organized in feature maps, within which each unit is connected to local patches in the feature maps of the previous layer through a set of weights called a filter bank. The result of this local weighted sum is then passed through a non-linearity such as a rectified linear unit (ReLU)   Deep neural networks exploit the property that many natural signals are compositional hierarchies. In images, local combinations of edges form motifs, motifs assemble into parts, and parts form objects. Similar hierarchies exist in speech and text from sounds to phones, phonemes, syllables, words and sentences. Backpropagating gradients through a ConvNet is as simple as through a regular deep network, allowing all the weights in all the filter banks to be trained.  Convolutional and pooling layers in ConvNets are inspired by the classic notions of simple cells and complex cells in visual neuroscience43, and the overall architecture is reminiscent of the LGN–V1–V2–V4–IT hierarchy in the visual cortex ventral pathway44. ConvNet models and monkeys are shown the same picture, the activations of high-level units in the ConvNet explains half of the variance of random sets of 160 neurons in the monkey’s inferotemporal cortex.



RQUGE:3.1088
 Q1:How are hidden layers different from hidden layers?
Q2:What is the problem with the hidden layers?
Best ans: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable.
['A0: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable. The hidden layers can also be seen in the following Fig:', 'A1: Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to maps (map) a fixed-size input (for example, an image) to a fix size output.', 'A2: Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to maps (map) a fixed-size input (for example, an image) to a fix size output', 'A3: Hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable.', 'A4: classification becomes linearly separable by the last layer', 'A5: classification', 'A6: category become linearly separable by the last layer (Fig. 1)', 'A7: distorting the input in a non-linear way']Text: Multilayer networks can be trained by simple stochastic gradient descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to maps (map) a fixed-size input (for example, an image) to a fixed size output.  In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers.  Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research (CIFAR) The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output.  In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.  Convolutional neural network (ConvNet) achieved many successes during the period when neural networks were out of favour. It has recently been widely adopted by the computervision community.



RQUGE:2.9576
 Q1:The idea of deep learning was discovered by several different groups during which decade?
Q2:When was the idea that multilayer networks can be trained by stochastic gradient descent discovered?
Best ans: 1970s and 1980s
["A0: 1990's.", "A1: 1990's", 'A2: 1980s.', 'A3: 1970s and 1980s', 'A4: 1970’', 'A5: 80', 'A6: 1970', 'A7: 1990s']Text: Multilayer networks can be trained by simple stochastic gradient descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to maps (map) a fixed-size input (for example, an image) to a fixed size output.  In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers.  Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research (CIFAR) The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output.  In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.  Convolutional neural network (ConvNet) achieved many successes during the period when neural networks were out of favour. It has recently been widely adopted by the computervision community.



RQUGE:2.4276
 Q1:In what way can a deep learning system be used to detect objects?
Q2:What does the negative gradient vector indicate?
Best ans: A deep learning system can be used to detect objects by adjusting the weights of the model. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum where the output error is low on average.
['A0: A deep learning system can be used to detect objects by adjusting the weights of the model.', 'A1: In a typical deep-learning system, there may be hundreds of millions of these adjustable weights.', 'A2: A deep learning system can be used to detect objects by adjusting the weights of the model. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum where the output error is low on average.', 'A3: With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.', 'A4: With several layers of multiple non-linear layers', 'A5: a system can implement extremely intricate functions of its input', 'A6: In a typical deep-learning system, there may be hundreds of millions', 'A7: with multiple non-linear layers']Text: Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.  Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called stochastic gradient descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average.  Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other.  The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule. It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output.  Non-linear functions used in neural networks include the rectified linear unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two.  Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module (module) in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



RQUGE:1.7979
 Q1:Why do we discover the structure of the world by observing it?
Q2:What parameters are used at each time step?
Best ans: Animals and humans learn by observation. Humans and animals are largely unsupervised. The same parameters (matrices U,V,W) are used at each time step.
['A0: Animals and humans learn by observation. Humans and animals are largely unsupervised.', 'A1: The same parameters (matrices U,V,W) are used at each time step.', 'A2: Animals and humans learn by observation. Humans and animals are largely unsupervised. The same parameters (matrices U,V,W) are used at each time step.', 'A3: Learning is largely unsupervised: we discover the structure of the world by observing it, not by being told the name of every object.', 'A4: unsupervised learning', 'A5: human learning is largely unsupervised', 'A6: largely unsupervised', 'A7: unsupervised']
Text: Human and animal learning is largely unsupervised: we discover the structure of the world by observing it,
 not by being told the name of every object. We expect much of the future progress in vision to come from systems that are trained end-toend and combine ConvNets with 
 recurrent neural networks (RNNs) that use reinforcement learning to decide where to look. Natural language understanding is another area in which deep learning is 
 poised to make a large impact over the next few years. Ultimately, major progress in artificial intelligence will come about through systems that combine representation
  learning with complex reasoning.  A recurrent neural network can maps (map) an input sequence into an output sequence with elements ot, with each ot depending on all the
   previous xtʹ (for tʹ ≤ t) The same parameters (matrices U,V,W ) are used at each time step.
 The backpropagation algorithm (Fig. 1) can be directly applied to the computational graph of the unfolded network.



RQUGE:1.4221
 Q1:Which of these networks is used for machine translation?
Q2:What can one do instead of translating the meaning of an image?
Best ans: Decode the meaning of an image into a French sentence into an English sentence
['A0: RNNs', 'A1: Decode the meaning of an image into a French sentence into an English sentence.',
 'A2: Decode the meaning of an image into a French sentence into an English sentence', 'A3:  long short-term memory (LSTM)networks or related forms of gated units are also currently used for the encoder and decoder networks that perform so well at machine translation17,72,76.', 'A4: The encoder', 'A5: RNNs', 'A6: RNN', 'A7: decoder']Text: For tasks that involve sequential inputs, such as speech and language, it is often better to use recurrent neural networks (RNNs)  Backpropagation was first introduced to train RNNs But training them has proved to be problematic because the backpropagated gradients either grow or shrink at each time step, so over many time steps they typically explode or vanish77,78. When we consider the output of the hidden units at different discrete time steps as if they were the outputs of different neurons in a deep multilayer network, it becomes clear how we can apply backPropagation to train Rnns.  This rather naive way of performing machine translation has quickly become competitive with the state-of-the-art. This raises serious doubts about whether understanding a sentence requires anything like the internal symbolic expressions that are manipulated by using inference rules. It is more compatible with the view that everyday reasoning involves many simultaneous analogies of word representations learned for modelling language, non-linearly projected to 2D for visualization using the t-SNE algorithm103. Instead of translating meaning of a French sentence into an English sentence, one can learn to ‘translate’ the meaning of an image.  The encoder is a deep ConvNet that converts pixels into an activity vector in its last hidden layer. The decoder is an recurrent neural network (RNN) similar to the ones used for machine translation and neural language modelling. long short-term memory (LSTM) networks have subsequently proved to be more effective than conventional RNNs, especially when they have several layers for each time step87, enabling an entire speech recognition system that goes all the way from acoustics to the sequence of characters in the transcription.  LSTM networks or related forms of gated units are also currently used for the encoder and decoder networks that perform so well at machine translation17,72,76. Proposals include the Neural Turing Machine in which the network is augmented by a ‘tape-like’ memory that the RNN can choose to read from or write to88, and memory networks. Memory networks have yielded excellent performance on standard question-answering benchmarks.



RQUGE:1.069
 Q1:In which task is the encoder better than the decoder?
Q2:What is the decoder similar to?
Best ans: Answer: Machine translation.
['A0: machine translation', 'A1: machine translation and neural language modelling', 'A2: Answer: Machine translation.', 'A3: Answer: Machine translation', 'A4: Machine Translation', 'A5: image', 'A6: image processing', 'A7: translation']Text: For tasks that involve sequential inputs, such as speech and language, it is often better to use recurrent neural networks (RNNs)  Backpropagation was first introduced to train RNNs But training them has proved to be problematic because the backpropagated gradients either grow or shrink at each time step, so over many time steps they typically explode or vanish77,78. When we consider the output of the hidden units at different discrete time steps as if they were the outputs of different neurons in a deep multilayer network, it becomes clear how we can apply backPropagation to train Rnns.  This rather naive way of performing machine translation has quickly become competitive with the state-of-the-art. This raises serious doubts about whether understanding a sentence requires anything like the internal symbolic expressions that are manipulated by using inference rules. It is more compatible with the view that everyday reasoning involves many simultaneous analogies of word representations learned for modelling language, non-linearly projected to 2D for visualization using the t-SNE algorithm103. Instead of translating meaning of a French sentence into an English sentence, one can learn to ‘translate’ the meaning of an image.  The encoder is a deep ConvNet that converts pixels into an activity vector in its last hidden layer. The decoder is an recurrent neural network (RNN) similar to the ones used for machine translation and neural language modelling. long short-term memory (LSTM) networks have subsequently proved to be more effective than conventional RNNs, especially when they have several layers for each time step87, enabling an entire speech recognition system that goes all the way from acoustics to the sequence of characters in the transcription.  LSTM networks or related forms of gated units are also currently used for the encoder and decoder networks that perform so well at machine translation17,72,76. Proposals include the Neural Turing Machine in which the network is augmented by a ‘tape-like’ memory that the RNN can choose to read from or write to88, and memory networks. Memory networks have yielded excellent performance on standard question-answering benchmarks.



RQUGE:1.0109
 Q1:Which of these is not a type of neural network?
Q2:What groups are developing versions of the deep net from 2009?
Best ans: voice groups
['A0: A convolutional neural network.', 'A1: A convolutional neural network', 'A2: Convolutional neural network (ConvNet)', 'A3: The Canadian Institute of Advanced Research (CIFAR)', 'A4: backpropagation procedure', 'A5: backpropagation', 'A6: voice groups', 'A7: a sound wave']Text: Multilayer networks can be trained by simple stochastic gradient descent. As long as the modules are relatively smooth functions of their inputs and of their internal weights, one can compute gradients using the backpropagation procedure. The idea that this could be done, and that it worked, was discovered independently by several different groups during the 1970s and 1980s. Many applications of deep learning use feedforward neural network architecture (Fig. 1), which learn to maps (map) a fixed-size input (for example, an image) to a fixed size output.  In the late 1990s, neural nets and backpropagation were largely forsaken by the machine-learning community and ignored by the computer-vision and speech-recognition communities. Recent theoretical and empirical results strongly suggest that local minima are not a serious issue in general in general. The hidden layers can be seen as distorting the input in a non-linear way so that categories become linearly separable by the last layer (Fig. 1), such as hidden layers.  Interest in deep feedforward networks was revived around 2006 (refs 31–34) by a group of researchers brought together by the Canadian Institute for Advanced Research (CIFAR) The analysis seems to show that saddle points with only a few downward curving directions are present in very large numbers. Almost all of these saddle points have very similar values of the objective function. Hence, it does not much matter which of the saddle points the algorithm gets stuck at. Information flows bottom up with lower-level features acting as oriented edge detectors, and a score is computed for each image class in output.  In 2009, the approach was used to map short temporal windows of coefficients extracted from a sound wave to a set of probabilities for the various fragments of speech that might be represented by the frame in the centre of the window. It achieved record-breaking results on a standard speech recognition benchmark that used a small vocabulary. By 2012, versions of the deep net from 2009 were being developed by many of the major speech groups and were already being deployed in Android phones. For smaller data sets, unsupervised pre-training helps to prevent overfitting40, leading to significantly better generalization.  Convolutional neural network (ConvNet) achieved many successes during the period when neural networks were out of favour. It has recently been widely adopted by the computervision community.



RQUGE:0.9991
 Q1:Which of these is not a type of neural network?
Q2:What could not distinguish two images?
Best ans: raw pixels
['A0: ReLU', 'A1: Samoyeds from white wolves.', 'A2: A rectified linear unit (ReLU) is a type of neural network.', 'A3: Samoyeds from white wolves', 'A4: ReLU', 'A5: wolf', 'A6: raw pixels', 'A7: the chain rule of derivatives']Text: Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. In a typical deep-learning system, there may be hundreds of millions of these adjustable weights. To properly adjust the weight vector, the learning algorithm computes a gradient vector that, for each weight, indicates by what amount the error would increase or decrease if the weight were increased by a tiny amount.  Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech. In practice, most practitioners use a procedure called stochastic gradient descent (SGD) This consists of showing the input vector for a few examples, computing the outputs and the errors, and computing the average gradient for those examples, and adjusting the weights accordingly. The negative gradient vector indicates the direction of steepest descent in this landscape, taking it closer to a minimum, where the output error is low on average.  Since the 1960s we have known that linear classifiers can only carve their input space into very simple regions, namely half-spaces separated by a hyperplane19. Problems such as image and speech recognition require the input–output function to be insensitive to irrelevant variations of the input, such as variations in position, orientation or illumination of an object, or variations in the pitch or accent of speech. At the pixel level, images of two Samoyeds in different poses and in different environments may be very different from each other, whereas two images of a Samoyed and a wolf in the same position and on similar backgrounds may be similar to each other.  The chain rule of derivatives tells us how two small effects (that of a small change of x on y on y, and that of y on z) are composed. Substituting one equation into the other gives the chain rule. It also works when x, y and z are vectors (and the derivatives are Jacobian matrices) For simplicity, we have omitted bias terms. At each layer, we first compute the total input z to each unit, which is a weighted sum of the output of the units in the layer below. Then a non-linear function f(.) is applied to z to get the output.  Non-linear functions used in neural networks include the rectified linear unit (ReLU) f(z) = max(0,z), commonly used in recent years. At each hidden layer we compute the error derivative with respect to the output of each unit. The error-derivative for the weight wjk on the connection from unit j in the layer below is just yj ∂E/∂zk. raw pixels could not possibly distinguish the latter two.  Deep-learning architecture is a multilayer stack of simple modules, all (or most) of which are subject to learning. Each module (module) in the stack transforms its input to increase both the selectivity and the invariance of the representation. With multiple non-linear layers, say a depth of 5 to 20, a system can implement extremely intricate functions of its inputs that are simultaneously sensitive to minute details — distinguishing Samoyeds from white wolves — and insensitive to large irrelevant variations.



